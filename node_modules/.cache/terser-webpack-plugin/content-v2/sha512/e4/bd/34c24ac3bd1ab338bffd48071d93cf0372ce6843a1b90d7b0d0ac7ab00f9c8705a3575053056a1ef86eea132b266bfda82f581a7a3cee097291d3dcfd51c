{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{398:function(e,v,s){\"use strict\";s.r(v);var a=s(25),t=Object(a.a)({},(function(){var e=this,v=e.$createElement,s=e._self._c||v;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"node-js葵花宝典\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#node-js葵花宝典\"}},[e._v(\"#\")]),e._v(\" Node.js葵花宝典\")]),e._v(\" \"),s(\"h2\",{attrs:{id:\"如何安装-node-js\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#如何安装-node-js\"}},[e._v(\"#\")]),e._v(\" 如何安装 Node.js\")]),e._v(\" \"),s(\"p\",[e._v(\"建议，如果刚入门并且还没有用过 Homebrew，则使用官方的安装程序，否则，Homebrew 是更好的解决方案。\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"brew install node\\n\")])])]),s(\"p\",[s(\"code\",[e._v(\"nvm\")]),e._v(\" 是一种流行的运行 Node.js 的方式。 例如，它可以轻松地切换 Node.js 版本，也可以安装新版本用以尝试并且当出现问题时轻松地回滚。\")]),e._v(\" \"),s(\"p\",[e._v(\"无论如何，当安装 Node.js 之后，就可以在命令行中访问 \"),s(\"code\",[e._v(\"node\")]),e._v(\" 可执行程序。\")]),e._v(\" \"),s(\"h2\",{attrs:{id:\"了解javascript-更容易上手node\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#了解javascript-更容易上手node\"}},[e._v(\"#\")]),e._v(\" 了解JavaScript，更容易上手Node\")]),e._v(\" \"),s(\"p\",[e._v(\"以下知识点是 \"),s(\"code\",[e._v(\"Node\")]),e._v(\" 的学习重点和关键：\")]),e._v(\" \"),s(\"ol\",[s(\"li\",[e._v(\"异步编程与回调\")]),e._v(\" \"),s(\"li\",[e._v(\"定时器\")]),e._v(\" \"),s(\"li\",[e._v(\"Promise\")]),e._v(\" \"),s(\"li\",[e._v(\"Async 与 Await\")]),e._v(\" \"),s(\"li\",[e._v(\"闭包\")]),e._v(\" \"),s(\"li\",[e._v(\"事件循环\")])]),e._v(\" \"),s(\"h2\",{attrs:{id:\"对于前端开发学习node的优势和区别\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#对于前端开发学习node的优势和区别\"}},[e._v(\"#\")]),e._v(\" 对于前端开发学习Node的优势和区别\")]),e._v(\" \"),s(\"p\",[e._v(\"从广泛使用 JavaScript 的前端开发者的角度来看，Node.js 应用程序具有巨大的优势：使用单一语言轻松编程所有一切（前端和后端）。\")]),e._v(\" \"),s(\"p\",[e._v(\"你会拥有巨大的机会，因为全面、深入地学习一门编程语言并通过使用同一语言完成 web（无论是在客户端还是在服务器）上的所有工作是非常困难的，你会处于独特的优势地位。\")]),e._v(\" \"),s(\"p\",[e._v(\"不同的还有生态系统。\")]),e._v(\" \"),s(\"p\",[e._v(\"在浏览器中，大多数时候做的是与 DOM 或其​​他 Web 平台 API（例如 Cookies）进行交互。 当然，那些在 Node.js 中是不存在的。 没有浏览器提供的 document、window、以及所有其他的对象。\")]),e._v(\" \"),s(\"p\",[e._v(\"而且在浏览器中，不存在 Node.js 通过其模块提供的所有不错的 API，例如文件系统访问功能。\")]),e._v(\" \"),s(\"p\",[e._v(\"另一个很大的不同是，在 Node.js 中，可以控制运行环境。 除非构建的是任何人都可以在任何地方部署的开源应用程序，否则你能知道会在哪个版本的 Node.js 上运行该应用程序。 与浏览器环境（你无法选择访客会使用的浏览器）相比起来，这非常方便。\")]),e._v(\" \"),s(\"p\",[e._v(\"这意味着可以编写 Node.js 版本支持的所有现代的 ES6-7-8-9 JavaScript。\")]),e._v(\" \"),s(\"p\",[e._v(\"由于 JavaScript 发展的速度非常快，但是浏览器发展得慢一些，并且用户的升级速度也慢一些，因此有时在 web 上，不得不使用较旧的 JavaScript / ECMAScript 版本。\")]),e._v(\" \"),s(\"p\",[e._v(\"可以使用 Babel 将代码转换为与 ES5 兼容的代码，再交付给浏览器，但是在 Node.js 中，则不需要这样做。\")]),e._v(\" \"),s(\"p\",[e._v(\"另一个区别是 Node.js 使用 CommonJS 模块系统，而在浏览器中，则还正在实现 ES 模块标准。\")]),e._v(\" \"),s(\"p\",[e._v(\"在实践中，这意味着在 Node.js 中使用 require()，而在浏览器中则使用 import。\")])])}),[],!1,null,null,null);v.default=t.exports}}]);","extractedComments":[]}